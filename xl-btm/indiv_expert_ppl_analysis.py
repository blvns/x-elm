import os
import pandas as pd

import matplotlib
from matplotlib import pyplot as plt
import seaborn as sns

sns.set_context('talk')
sns.set_style("white")

DATA = {'lang': {
	4: [[17.358,	10.381,	15.460,	10.862,	12.795,	13.891,	12.920,	17.816,	14.019,	9.070,	12.498,	21.101,	18.047,	15.256,	14.071,	18.353],
		[18.022,	11.794,	16.127,	13.602,	13.756,	15.805,	13.434,	20.783,	11.666,	7.787,	13.824,	23.098,	14.591,	16.205,	15.968,	13.172],
		[14.835,	11.394,	14.069,	9.542,	13.481,	15.182,	11.890,	20.627,	14.154, 9.599,	13.606,	22.177,	17.989,	19.129,	16.106,	18.612],
		[17.401,	11.681,	16.858,	14.945,	14.030,	16.588,	13.829,	12.479,	16.205,	8.545,	13.915,	18.192,	19.396,	13.180,	10.512,	15.838]],
	8: [[18.459,	12.628,	15.727,	11.891,	12.752,	13.817,	13.093,	19.336,	14.344,	9.939,	14.330,	23.710,	19.869,	16.599,	16.316,	19.097],
		[18.391,	12.143,	13.775,	9.424,	13.575,	15.570,	13.069,	25.415,	14.471,	11.010,	14.152,	26.368,	19.277,	16.956,	21.068,	19.413],
		[23.336,	12.927,	16.521,	20.587,	13.845,	16.035,	13.646,	27.729,	11.433,	7.757,	14.308,	23.304,	19.812,	20.338,	16.855,	17.774],
		[17.921,	13.297,	18.293,	26.584,	14.353,	17.933,	15.064,	11.124,	21.240, 8.566,	14.680,	24.873,	20.570,	12.599,	20.626,	15.219],
		[23.615,	10.206,	16.734,	14.371,	13.931,	16.695,	13.864,	28.911,	14.691,	11.275,	12.125,	24.830,	20.663,	19.626,	20.375,	21.289],
		[14.491,	13.013,	15.875,	13.990,	13.644,	16.307,	11.635,	24.877,	15.013,	11.649,	14.858,	27.488,	20.634,	24.106,	21.988,	20.690],
		[18.473,	13.550,	17.919,	18.792,	14.225,	18.005,	14.436,	23.638,	19.848,	9.286,	15.381,	29.933,	13.625,	16.927,	22.274,	11.988],
		[19.680,	13.036,	18.166,	17.582,	14.161,	17.645,	14.285,	21.463,	16.819,	9.044,	15.038,	18.319,	21.768,	17.835,	10.428,	17.221]]},
'tfidf':{
	4: [[16.138,	10.737,	14.208,	10.035,	13.544,	14.869,	12.708,	15.443,	12.144,	7.913,	13.228,	19.136,	16.747,	13.558,	12.359,	13.487],
		[14.836,	11.527,	15.917,	10.575,	13.733,	13.749,	13.031,	18.507,	14.012,	8.846,	13.911,	19.649,	14.639,	19.098,	11.694,	17.756],
		[16.887,	10.346,	15.672,	9.628,	13.741,	15.572,	11.960,	20.092,	14.016,	9.570,	12.354,	21.767,	18.500,	15.280,	15.875,	18.063],
		[15.985,	10.662,	15.193,	9.895,	12.622,	14.774,	12.608,	14.042,	13.127,	8.234,	13.097,	18.611,	16.583,	14.386,	12.365,	16.594]],
	8: [[16.671,	10.873,	15.325,	10.285,	12.924,	15.094,	12.965,	16.084,	13.795,	8.642,	13.364,	19.020,	17.513,	15.199,	14.158,	17.137],
		[16.525,	10.684,	15.065,	10.244,	13.344,	14.846,	12.794,	14.707,	13.689,	7.836,	13.025,	19.083,	17.024,	13.401,	11.251,	17.196],
		[19.383,	12.313,	13.777,	11.983,	13.868,	16.018,	13.306,	21.983,	14.288,	10.670,	14.575,	25.722,	20.140,	17.662,	23.134,	18.453],
		[16.255,	10.707,	15.397,	10.139,	13.418,	14.778,	12.954,	14.461,	11.866,	8.385,	13.206,	19.100,	16.821,	14.849,	12.610,	13.344],
		[26.731,	10.355,	16.957,	16.290,	14.332,	17.345,	14.542,	29.059,	14.912,	12.948,	12.224,	25.207,	21.567,	20.559,	21.732,	21.048],
		[14.360,	12.278,	16.663,	9.461,	14.152,	16.044,	13.696,	23.514,	14.433,	11.161,	14.697,	21.469,	13.958,	24.085,	23.084,	18.529],
		[17.279,	11.699,	15.605,	11.011,	13.771,	15.419,	11.516,	21.098,	14.088,	9.703,	14.182,	25.589,	20.110,	16.308,	20.155,	18.129],
		[20.017,	12.853,	16.145,	12.453,	13.888,	13.691,	13.325,	22.159,	14.340,	10.387,	15.237,	25.730,	21.396,	17.779,	24.584,	18.769]],}
}

BEST_PPLS =  {
	4: [14.835,	10.381,	14.069,	9.542,	12.795,	13.891,	11.890,	12.479,	11.666,	7.787,	12.498,	18.192,	14.591,	13.180,	10.512,	13.172],
	8: [14.491,	10.206,	13.775,	9.424,	12.752,	13.817,	11.635,	11.124,	11.433,	7.757,	12.125,	18.319,	13.625,	12.599,	10.428,	11.988]}

def main():

		expert_type='tfidf'
		baseline_ppl = [16.659,	11.262,	15.959,	10.698,	14.343,	15.867,	13.473,	18.164,	14.406,	8.911,	13.536,	19.846,	17.585,	14.379,	13.345,	18.531]

		#TODO add k=16 later?
		for num_experts in [4, 8]:

			#make into heatmap format
			x_labels = ['ar', 'bg', 'de', 'el', 'en', 'es', 'fr', 'hi', 'ja', 'ko', 'ru', 'sw', 'tr', 'ur', 'vi', 'zh'] #all langs
			y_labels = [i for i in list(range(0, num_experts))]

			data = DATA[expert_type][num_experts]
			if expert_type == 'lang': best_ppl = BEST_PPLS[num_experts]
			print(data)

			max_val = 0
			min_val = 0

			for i in range(len(data)):
				for j in range(len(data[i])):
					u = baseline_ppl[j]
					if expert_type == 'lang': 
						v = best_ppl[j]
					
					if expert_type == 'lang' and (data[i][j] - v) == 0:
							data[i][j] = 100
					else:
						x = data[i][j] - u
						data[i][j] = x
						if max_val < x: max_val = x
						if min_val > x: min_val = x

			print(data)
			#make a heatmap of auto clusters dists at k=4, 8, 16
			cmap = sns.diverging_palette(145, 300, s=60, as_cmap=True).copy()
			cmap.set_over('gray')
			sns.heatmap(data, yticklabels=y_labels, xticklabels=[l.upper() for l in x_labels], cmap=cmap, center=0, vmax=max_val, vmin=min_val)


			plt.ylabel('Experts')
			plt.xlabel('Lang')
			plt.tight_layout()
			plt.savefig('./ppl_analysis_{}_{}.png'.format(expert_type, num_experts), dpi=800)
			plt.clf()

if __name__ == "__main__":
	main()

#EOF